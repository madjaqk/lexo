name: Deploy to EC2

on:
  push:
    branches:
      - master
      - test_deploy
    tags:
      - v*
      - dev*

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials for ECR Public (us-east-1)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR (server)
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Configure AWS credentials for main region
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION}}

      - name: Build and push server image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          target: app
          push: true
          tags: |
            ${{ vars.ECR_REPO_PREFIX }}/${{ vars.ECR_PROJECT_NAME }}/server:latest
            ${{ vars.ECR_REPO_PREFIX }}/${{ vars.ECR_PROJECT_NAME }}/server:${{ github.sha }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          build-args: |
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
          tags: |
            ${{ vars.ECR_REPO_PREFIX }}/${{ vars.ECR_PROJECT_NAME }}/frontend:latest
            ${{ vars.ECR_REPO_PREFIX }}/${{ vars.ECR_PROJECT_NAME }}/frontend:${{ github.sha }}

      - name: Build and push scheduler image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          target: scheduler
          push: true
          tags: |
            ${{ vars.ECR_REPO_PREFIX }}/${{ vars.ECR_PROJECT_NAME }}/scheduler:latest
            ${{ vars.ECR_REPO_PREFIX }}/${{ vars.ECR_PROJECT_NAME }}/scheduler:${{ github.sha }}

      - name: Deploy to EC2
        env:
          EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
          EC2_USER: ${{ secrets.EC2_USER }}
          ECR_PROJECT_NAME: ${{ vars.ECR_PROJECT_NAME }}
          ECR_REPO_PREFIX: ${{ vars.ECR_REPO_PREFIX }}
          EFS_ADDRESS: ${{ secrets.EFS_ADDRESS }}
          IMAGE_TAG: ${{ github.sha }}
          PUZZLE_GENERATION_SALT: ${{ secrets.PUZZLE_GENERATION_SALT }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
        run: |
          chmod +x deploy_to_ec2.sh
          ./deploy_to_ec2.sh
